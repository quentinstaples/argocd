apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # Give your application a unique and descriptive name.
  name: cert-manager
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io

spec:
  project: default
  
  # The source configuration now points to your Git repository and your new chart.
  source:
    # This is your private repository where the 'elastic-stack' chart is located.
    repoURL: git@github.com:quentinstaples/elastic.git
    # The branch of your Git repository to use.
    targetRevision: main
    path: dependencies/cert-manager

  # The destination defines where the application will be deployed in your cluster.
  destination:
    server: https://kubernetes.default.svc
    # It's a good practice to use a dedicated namespace for Elastic.
    namespace: cert-manager

  # The synchronization policy ensures that changes are automatically applied.
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# cert-manager-crds-app.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-crds
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.18.2
    chart: cert-manager
    helm:
      releaseName: cert-manager-crd-only
      parameters:
        - name: crds.enabled
          value: "true"
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # Give your application a unique and descriptive name.
  name: metrics-server
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io

spec:
  project: default
  
  # The source configuration now points to your Git repository and your new chart.
  source:
    # This is your private repository where the 'elastic-stack' chart is located.
    repoURL: git@github.com:quentinstaples/elastic.git
    # The branch of your Git repository to use.
    targetRevision: main
    path: dependencies/metrics-server

  # The destination defines where the application will be deployed in your cluster.
  destination:
    server: https://kubernetes.default.svc
    # It's a good practice to use a dedicated namespace for Elastic.
    namespace: kube-system

  # The synchronization policy ensures that changes are automatically applied.
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # Give your application a unique and descriptive name.
  name: eck-operator
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io

spec:
  project: default
  
  # The source configuration now points to your Git repository and your new chart.
  source:
    # This is your private repository where the 'elastic-stack' chart is located.
    repoURL: git@github.com:quentinstaples/elastic.git
    # The branch of your Git repository to use.
    targetRevision: main
    path: dependencies/eck-operator

  # The destination defines where the application will be deployed in your cluster.
  destination:
    server: https://kubernetes.default.svc
    # It's a good practice to use a dedicated namespace for Elastic.
    namespace: elastic-system

  # The synchronization policy ensures that changes are automatically applied.
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true