apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # The name of the ArgoCD Application.
  # This should be unique and descriptive.
  name: sops-secrets-operator-crd
  # This application is managed by ArgoCD, so it should be in the argocd namespace.
  namespace: argocd
spec:
  # The project to which this application belongs. 'default' is the standard project.
  project: default
  # The source of the manifest. In this case, it's a single YAML file from a Git repository.
  source:
    repoURL: https://github.com/isindir/sops-secrets-operator.git
    targetRevision: master
    path: config/crd/bases
    # Specify the name of the file within the path.
    # ArgoCD can handle a single file or a directory.
    directory:
      jsonnet: {}
      recurse: true
  # The destination cluster and namespace for the resources.
  # This manifest installs cluster-scoped resources, so the namespace is not strictly necessary.
  destination:
    server: https://kubernetes.default.svc
    # Since this CRD is cluster-scoped, the namespace doesn't matter,
    # but we can set one for clarity.
    namespace: sops
  # Define the synchronization policy for this application.
  syncPolicy:
    automated:
      # Prune=true allows ArgoCD to delete resources that are no longer
      # defined in Git, ensuring a clean state.
      prune: true
      # selfHeal=true makes ArgoCD automatically sync when the live state
      # deviates from the desired Git state.
      selfHeal: true
    syncOptions:
      # This option tells ArgoCD to create the namespace if it doesn't already exist.
      - CreateNamespace=true
    # The `sync-wave` annotation is a crucial best practice for managing CRDs.
    # We set a negative value (`-1`) to ensure this application's resources
    # (the CRDs) are created BEFORE any other application that depends on them.
    # This is a critical step for a robust deployment.
    # See more about sync waves in the ArgoCD documentation:
    # https://argo-cd.readthedocs.io/en/stable/user-guide/sync-waves/
